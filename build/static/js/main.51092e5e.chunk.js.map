{"version":3,"sources":["components/Contact.js","components/Addnew.js","services/phonebookaccess.js","App.js","index.js"],"names":["Contact","contact","action","name","number","onClick","Addnew","addContact","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","baseUrl","console","log","axios","get","then","response","data","newObject","post","id","put","delete","ShowRow","countriesToShow","handle","length","entry","capital","area","languages","map","s","src","flags","png","n","App","props","useState","persons","setPersons","setNewName","setNewNumber","bookFilter","setNewBookFilter","showAll","setShowAll","countries","setCountries","countryFilter","setCountryFilter","setCountriesToShow","message","setMessage","Message","className","noteM","setTimeout","hook","contactsService","initialContacts","useEffect","contactsToShow","filter","event","target","preventDefault","indexOf","find","window","confirm","contactObject","date","Date","toISOString","concat","catch","error","entries","a","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51092e5e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contact = ({ contact, action }) => {\r\n  return (\r\n    <li>{contact.name} {contact.number}\r\n      <button onClick={action}>delaa</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\n\r\nconst Addnew = ({addContact,newName,handleNameChange,newNumber,handleNumberChange}) => {\r\nreturn(\r\n        <form onSubmit={addContact}>\r\n        <div>\r\n        Name: <input value={newName} \r\n              onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n        Number: <input value={newNumber} \r\n              onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Addnew","import axios from 'axios'\r\n\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n//const baseUrl = 'https://polar-spire-32718.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    console.log(\"Yritetäänpä palauttaa taulukko\")\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {return response.data})\r\n}\r\n \r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => {return response.data})\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response=>{return response.data})\r\n}\r\n\r\nconst delaa = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response =>{return response})\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    delaa: delaa\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport Contact from './components/Contact'\nimport Addnew from './components/Addnew'\nimport axios from 'axios'\nimport contactsService from './services/phonebookaccess'\n\n\n\nconst ShowRow = ({countriesToShow, handle}) => {\n  if (countriesToShow.length === 1 ) {\n    let entry = countriesToShow[0] \n   \n    return(\n      <>\n      <p>Name: {entry.name}</p> \n      <p>Capital: {entry.capital}</p>\n      <p>Area: {entry.area}</p>\n      <p>Languages:</p> {entry.languages.map(s => {return(<ul><li>{s.name}</li></ul>)})}      \n      <p>Flag: </p> <img src={entry.flags.png} /> \n      </>\n      )\n\n    }\n    else \n    if (countriesToShow.length > 1 &&  countriesToShow.length < 11) {\n      return(\n        <>\n        \n        {countriesToShow.map((n) => \n            <li> {n.name}\n                <button onClick={()=>handle(n)}> Show</button>\n             </li>)} \n        </>\n        )\n      }\n      if (countriesToShow.length > 10) {\n        return(\n          <>\n          Too many matches\n          </>\n          )\n        }\n  \n      return (\n        <p>Input country name</p>\n      )\n  }\n\nconst App = (props) => {  \n  const [persons, setPersons] = useState([])\n  const [newName, setNewName]=useState('')\n  const [newNumber, setNewNumber]=useState('')\n  const [bookFilter, setNewBookFilter]=useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const [countries, setCountries] =useState([])  \n  const [countryFilter, setCountryFilter] = useState([])\n  const [countriesToShow, setCountriesToShow] = useState([])\n\n  const [message, setMessage] = useState(\"\")\n  const Message = ({message}) => {\n    return(\n      <div className=\"message\">\n        {message}\n      </div>\n    )\n  }\n  const noteM = (message) => {   \n    setMessage(message)\n    setTimeout(() =>{\n      setMessage(null)\n    },3000)\n  }  \n\n  const hook=()=>{\n  console.log(\"effect\")\n  contactsService\n    .getAll()\n    .then(initialContacts=>{\n      console.log('promise fullfilled')\n      setPersons(initialContacts)\n    })\n  }\n\n  useEffect(hook, []) \n  console.log('render',persons.length, 'persons')\n \n\n  const hook1=()=>{\n    console.log(\"effect\")\n    axios\n      .get('https://restcountries.com/v2/all')\n      .then(response=>{\n        console.log('promise fullfilled')\n        setCountries(response.data)\n      })\n    }\n  \n  useEffect(hook1, []) \n  console.log('render',countries.length, 'countries')\n    \n\n  const addContact = (event) => {\n    event.preventDefault()\n\n    if (persons.map(n =>n.name).indexOf(newName) > -1)\n    {\n      const contact = persons.find(s => s.name === newName)\n      contact.number = newNumber\n  \n      if(window.confirm(\"Contact exists, wanna update it\")){\n        contactsService\n          .update(contact.id, contact)\n          .then(response => {console.log(response)\n                setPersons(persons.map(s=>s.id !== contact.id ? s : response))\n          })\n        noteM(`contact ${contact.name} updated`)\n        }\n    }\n    else\n    {\n      const contactObject = {\n        name: newName,\n        number: newNumber,\n        date: new Date().toISOString(),\n      }\n\n      contactsService\n        .create(contactObject)\n        .then(response => {console.log(response)})\n\n      setPersons(persons.concat(contactObject))\n\n      setNewName('')\n      setNewNumber('')\n\n      console.log('new contact added, event.target')\n      noteM(\"New contact added\")\n    }\n  }\n\n  const removeContact=(id) => {\n      console.log(\"Try to delaa\")\n      contactsService\n      .delaa(id)\n      .then(response =>{console.log(response)\n                        hook()\n                        noteM(\"One contact removed\")\n                      }\n          )\n\n      .catch(error =>{\n        hook()\n        noteM(\"Contact was already removed\")\n      })\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleBookFilterChange = (event) => {\n    setNewBookFilter(event.target.value)\n    if (event.target.value === \"\")\n      setShowAll(true)\n    else\n      setShowAll(false)\n  }\n\n\n  \n  const handleCountryFilterChange = (event) => {\n    setCountryFilter(event.target.value)\n\n    let entries = countries.map((a)=>a.name)\n    console.log(\"selected entries - 1\", entries.length)   \n\n    setCountriesToShow(countries.filter((a)=>a.name.includes(countryFilter)))\n  }\n  \n  const handleJumpToCountry = (n) => {\n    setCountryFilter(n.name)\n    setCountriesToShow(countries.filter((a)=>a.name.includes(n.name)))\n  }\n\n  const contactsToShow = showAll\n    ? persons\n    : persons.filter(n => n.name === bookFilter)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <p><Message message={message}></Message></p>\n      <div>\n\n      filter shown with:\n        <input value={bookFilter}\n        onChange={handleBookFilterChange} />\n      </div>\n\n      <h2>add a new</h2>\n      <Addnew addContact={addContact}\n              newName={newName} \n              handleNameChange={handleNameChange}\n              newNumber={newNumber} \n              handleNumberChange={handleNumberChange}/>\n\n      <h2>Numbers</h2>\n      <div>\n        <button onClick={()=>setShowAll(!showAll)}>\n          show{showAll ? 'important' :  'all' }\n        </button>\n      </div>\n      <ul>\n        {contactsToShow.map(n => \n          <Contact key={n.name} contact={n} action={()=>removeContact(n.id)} />\n        )}\n      </ul>\n\n\n      <h1> FlagFinder</h1>\n      <p> find countries</p>\n      <input value={countryFilter}\n              onChange = {handleCountryFilterChange} />\n\n      <div> \n        <ShowRow countriesToShow = {countriesToShow} handle={handleJumpToCountry}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App ","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}